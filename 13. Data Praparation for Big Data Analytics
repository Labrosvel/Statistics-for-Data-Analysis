#################################################
# Data Preparation in Big Data Analytics process
#################################################

#************************************
  # Getting started
#************************************
# Load the data into dataframes
Shopping <- read.csv('Shopping.csv')
Employee <- read.csv('Employee.csv')
Vitals <- read.csv('Vitals.csv')
# Invoke the missing value to 'Employee' in 1st row 2nd column manually
fix(Employee)
# print vitals df without displaying any decimals
print(vitals, digits=0)

#************************************
# Missing values
#************************************
# a. Identify the row and column of the missing value in 'Employee' df 
rowSums(is.na(Employee))
colSums(is.na(Employee))
# b. Display the records with missing values in 'Employee' df
complete.cases(Employee)
# c. Create new df 'Employee2' by omitting missing values
Employee2 <- na.omit(Employee)
head(Employee2[,1:3]) # Check the result is valid
head(Employee[,1:3]) # comparing the above result with the original one
# d. Compute descr.stats for 'Employee' and for 'Employee2' and compare
min(Employee$Age)
max(Employee$Age)
mean(Employee$Age)
sd(Employee$Age)
min(Employee2$Age)
max(Employee2$Age)
mean(Employee2$Age)
sd(Employee2$Age)

mean(na.omit(Employee$Age))

#***********************************
# Creating New Variables
#***********************************
# a.Each employee in Employee got a salary increase of 7%. Add two columns in 
# the dataframe Employee, one called Increase, which contains the value of the 
# increase, and another called NewSalary, which contains the salary of each employee 
# after the increase.
Employee$Increase <- 0.07*Employee$Salary
Employee$NewSalary <- Employee$Salary + Employee$Increase
# b. Each employee in dataframe Employee2 that you created in Question 3 got a salary 
# increase of 3%. Do the same as 4(a) for Employee 2.
Employee2$Increase <- 0.03*Employee2$Salary
Employee2$NewSalary <- Employee2$Salary + Employee2$Increase
# c. Calculate the absolute value of the difference between the mean of the NewSalary 
# attribute in Employee and the mean of the NewSalary in Employee2
abs(mean(Employee$NewSalary)-mean(Employee2$NewSalary))

#*********************************
# Sorting data
#*********************************
# Create a new dataframe Employee3, which is the same as the Employee dataframe 
# but is sorted with respect to Age in decreasing order, breaking ties with Salary 
# in increasing order, and contains the missing values first.
Employee3 <- head(Employee[order(-Employee$Age, Employee$Salary, na.last=FALSE),])  

#*****************************************
# Identifying and removing duplicate data
#******************************************
# a. Print the position of all duplicate elements in the attribute Age of Employee
duplicated(Employee$Age)
# b. Create a dataframe Uniq_Age containing only records with unique values in the 
# attribute Age of Employee.
Uniq_Age <- Employee[!duplicated(Employee$Age),]
# c. Create a vector Uniq_Age_vec containing only the unique values of the attribute 
# Age of Employee
Uniq_Age_vec <- unique(Employee$Age)

#*******************************************
# Data Filtering
#*******************************************
Employee[which(Employee$Age <40 & Employee$Gender == 'Male'),]





















